###########
# BUILDER #
###########

# pull official base image
FROM python:3.9-alpine3.12 as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN echo -e "https://mirrors.aliyun.com/alpine/v3.12/main/\nhttps://mirrors.aliyun.com/alpine/v3.12/community" \
    > /etc/apk/repositories
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev openldap-dev

# lint
RUN pip install --upgrade pip \
    -i https://mirrors.aliyun.com/pypi/simple/
RUN pip install flake8 \
    -i https://mirrors.aliyun.com/pypi/simple/
COPY . .
RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir \
    /usr/src/app/wheels -r requirements.txt \
    -i https://mirrors.aliyun.com/pypi/simple/


#########
# FINAL #
#########

# pull official base image
FROM python:3.9-alpine3.12

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
WORKDIR $APP_HOME

# install dependencies
RUN echo -e "https://mirrors.aliyun.com/alpine/v3.12/main/\nhttps://mirrors.aliyun.com/alpine/v3.12/community" \
    > /etc/apk/repositories
RUN apk update && apk add libpq gcc python3-dev musl-dev openldap-dev
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/* \
    -i https://mirrors.aliyun.com/pypi/simple/

# copy entrypoint-prod.sh
COPY ./entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/web/entrypoint.prod.sh"]
